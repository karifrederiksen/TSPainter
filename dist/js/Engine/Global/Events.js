const _callbacks = {};
export function subscribe(id, callback) {
    let callList = _callbacks[id];
    if (callList == null) {
        callList = [];
        _callbacks[id] = callList;
    }
    callList.push(callback);
}
export function unsubscribe(id, callback) {
    const idx = _callbacks[id].indexOf(callback);
    if (idx >= 0) {
        _callbacks[id].splice(idx, 1);
    }
}
export function broadcast(id, arg) {
    const callList = _callbacks[id];
    if (callList != null) {
        for (let i = 0, ilen = callList.length; i < ilen; i++) {
            callList[i](arg);
        }
    }
    else {
        const keys = Object.keys(ID);
        console.warn([
            "Event ", id, " \"", keys[(keys.length / 2) + id], "\"", " does not have any callbacks associated with it."
        ].join(""));
    }
}
export var ID;
(function (ID) {
    ID[ID["PointerDown"] = 0] = "PointerDown";
    ID[ID["PointerUp"] = 1] = "PointerUp";
    ID[ID["PointerMove"] = 2] = "PointerMove";
    ID[ID["PointerDrag"] = 3] = "PointerDrag";
    ID[ID["ButtonToolBrush"] = 4] = "ButtonToolBrush";
    ID[ID["ButtonToolEraser"] = 5] = "ButtonToolEraser";
    ID[ID["ButtonToolBlur"] = 6] = "ButtonToolBlur";
    ID[ID["BrushHue"] = 7] = "BrushHue";
    ID[ID["BrushSaturation"] = 8] = "BrushSaturation";
    ID[ID["BrushValue"] = 9] = "BrushValue";
    ID[ID["BrushAlpha"] = 10] = "BrushAlpha";
    ID[ID["BrushDensity"] = 11] = "BrushDensity";
    ID[ID["BrushSoftness"] = 12] = "BrushSoftness";
    ID[ID["BrushSpacing"] = 13] = "BrushSpacing";
    ID[ID["BrushSize"] = 14] = "BrushSize";
})(ID || (ID = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL0VuZ2luZS9HbG9iYWwvRXZlbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBLE1BQU0sVUFBVSxHQUFpQyxFQUFFLENBQUM7QUFNcEQsTUFBTSxvQkFBb0IsRUFBTSxFQUFFLFFBQWtCO0lBQ25ELElBQUksUUFBUSxHQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixFQUFFLENBQUMsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2QsVUFBVSxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRUQsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN6QixDQUFDO0FBTUQsTUFBTSxzQkFBc0IsRUFBTSxFQUFFLFFBQWtCO0lBQ3JELE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0MsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDZCxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvQixDQUFDO0FBQ0YsQ0FBQztBQU1ELE1BQU0sb0JBQW9CLEVBQU0sRUFBRSxHQUFRO0lBQ3pDLE1BQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVoQyxFQUFFLENBQUMsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztRQUV0QixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQ3ZELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsQixDQUFDO0lBQ0YsQ0FBQztJQUNELElBQUksQ0FBQyxDQUFDO1FBRUwsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM3QixPQUFPLENBQUMsSUFBSSxDQUFDO1lBQ1osUUFBUSxFQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsa0RBQWtEO1NBQzVHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDYixDQUFDO0FBQ0YsQ0FBQztBQUdELE1BQU0sQ0FBTixJQUFZLEVBcUJYO0FBckJELFdBQVksRUFBRTtJQUViLHlDQUFXLENBQUE7SUFDWCxxQ0FBUyxDQUFBO0lBQ1QseUNBQVcsQ0FBQTtJQUNYLHlDQUFXLENBQUE7SUFHWCxpREFBZSxDQUFBO0lBQ2YsbURBQWdCLENBQUE7SUFDaEIsK0NBQWMsQ0FBQTtJQUdkLG1DQUFRLENBQUE7SUFDUixpREFBZSxDQUFBO0lBQ2YsdUNBQVUsQ0FBQTtJQUNWLHdDQUFVLENBQUE7SUFDViw0Q0FBWSxDQUFBO0lBQ1osOENBQWEsQ0FBQTtJQUNiLDRDQUFZLENBQUE7SUFDWixzQ0FBUyxDQUFBO0FBQ1YsQ0FBQyxFQXJCVyxFQUFFLEtBQUYsRUFBRSxRQXFCYiJ9